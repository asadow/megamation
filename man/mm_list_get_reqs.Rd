% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/list_gets.R
\name{mm_list_get_reqs}
\alias{mm_list_get_reqs}
\title{List GET requests}
\usage{
mm_list_get_reqs(endpoint, ..., allfields = TRUE)
}
\arguments{
\item{endpoint}{The API endpoint. For example, \code{"timecard"} for employee
transactions, and \code{"workorder"} for work orders. All endpoints are listed
at \url{https://apidocs.megamation.com/}.}

\item{...}{<\code{\link[rlang:dyn-dots]{dynamic-dots}}> Name-value pairs to filter the
request. The name should be the lower-case name of a field that is
filter-enabled (in Megamation's words, a criteria). These arguments are
processed with \code{\link[rlang:defusing-advanced]{rlang::quos()}} and support unquote via \code{\link{!!}} and
unquote-splice via \code{\link{!!!}}.}

\item{allfields}{If \code{TRUE}, return all fields currently available for the
endpoint.}
}
\value{
A list of GET requests of class \code{httr2_request}.
}
\description{
\code{mm_list_get_reqs()} returns the necessary GET request(s) for
fetching the supplied endpoint and parameters. Multiple GET requests are
sometimes needed for two reasons.

One, Megamation does not support common ways of separating multiple values
for a field inside an HTTP URL. These ways include:
\itemize{
\item using a \verb{,}, e.g. \verb{?x=1,2}
\item using a \code{|}, e.g. \code{?x=1|2}
\item turning each element into its own parameter, e.g. \code{?x=1&x=2}

For Megamation, the first two ways will result in a 404 error. The last way
fetches data where x is both 1 and 2 (not 1 or 2). Hence
\code{mm_list_get_reqs()} defines separate GET requests for each value given to
a parameter.
}

Two, the timecard endpoint is unique in that separate GET requests must be
made for separate years of data (e.g. 2022 vs 2023). This is also
automatically handled by \code{mm_list_get_reqs()}.
}
\examples{
\dontshow{if (megamation:::has_creds()) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}
date <- seq.Date(as.Date("2022-01-01"), as.Date("2023-01-31"), by = "day")
megamation:::mm_list_get_reqs("timecard", date = date)
\dontshow{\}) # examplesIf}
}
