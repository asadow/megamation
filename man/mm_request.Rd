% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/request.R
\name{mm_request}
\alias{mm_request}
\title{Create a Megamation API request}
\usage{
mm_request(
  endpoint,
  ...,
  allfields = TRUE,
  .get = "data",
  .url = get_env_url(),
  .key = get_env_key()
)
}
\arguments{
\item{endpoint}{The API endpoint. For example,
\code{"timecard"} for employee transactions, and \code{"workorder"}
for work orders. All endpoints are listed at
https://apidocs.megamation.com/.}

\item{...}{<\link{dynamic-dots}> Name-value pairs to filter the request.
The name should be the lower-case name of a
field that is filter-enabled
(in Megamation's words, a criteria).

The value should be:
\itemize{
\item A length-1 atomic vector representing the value of said variable.
\item An as-is, modifier-value(s) combination,
e.g. \code{I("<>2020-01-01,2020-12-31")}. \code{\link[=I]{I()}} is used to prevent automatic
escaping.
}

To filter a single variable by multiple values, repeat name-value pairs with
the same name but different values. e.g. \verb{trade = "DM", trade = "PCO"}.}

\item{allfields}{If \code{TRUE}, return all fields set to be available for
the endpoint.}

\item{.get}{A length-1 character vector representing whether the request is
for the endpoint's \code{"data"}, \code{"criteria"}, \code{"labels"}, or \code{"schema"}.}

\item{.url}{The API URL.}

\item{.key}{The API key.}
}
\value{
An object of class \code{httr2_request}.
}
\description{
\code{mm_request()} creates a request using \code{\link[httr2:request]{httr2::request()}} and
does the following:
\itemize{
\item Inserts the base URL using the environment variable \code{MEGAMATION_URL} from
your \code{.Renviron}. Your key and base URL can be set using \code{\link[=mm_set_creds]{mm_set_creds()}}.
\item Appends the URL with the endpoint defined by parameter \code{endpoint}.
\item Appends the URL with the filtering defined by parameter \code{...}
<\link{dynamic-dots}>.
\item Sets the user-agent as the GitHub \code{megamation} package.
\item Authenticates the request with HTTP basic authentication using
environment variables \code{MEGAMATION_KEY} and \code{MEGAMATION_URL}
from your \code{.Renviron}.
\item Handles HTTP errors so useful information from the response is extracted
(e.g. "No response body").
\item Automatic caching of responses. See \code{\link[httr2:req_cache]{httr2::req_cache()}}.
}

After creating a request with \code{mm_request()}, you can
\itemize{
\item Paginate the request using \code{\link[=mm_req_paginate]{mm_req_paginate()}}.
\item Perform the request and fetch the response using \code{\link[httr2:req_perform]{httr2::req_perform()}} or
\code{\link[httr2:req_perform_iteratively]{httr2::req_perform_iteratively()}} if the request is paginated.
}

Alternatively,
\code{\link[=mm_get]{mm_get()}} can at once define, paginate, and perform a request.
}
